{
    "MATCH (p1:Person {id:\"987\"}), (p2:Person {id:\"2199023265994\"}) create (p1)-[r:knows {creationDate: \"13824310250\", weight:\"0\"}]->(p2)": "MATCH (p1:Person {id:\"987\"}), (p2:Person {id:\"2199023265994\"}) create (p1)-[r:knows {creationDate: \"13824310250\", weight:\"0\"}]->(p2) WITH [r] as create_views  UNWIND create_views as view_edge optional match (n:Person)-[view_edge]->()-[r2]->(m:Place) WHERE view_edge.is_view is null  AND r2.is_view is null  with n,m,view_edge CREATE(n)-[r:PERSON_PLACE{is_view:true}]->(m) with DISTINCT view_edge optional match (n:Person)-[r1]->()-[view_edge]->(m:Place) WHERE r1.is_view is null  AND view_edge.is_view is null  with n,m,view_edge CREATE(n)-[r:PERSON_PLACE{is_view:true}]->(m) with DISTINCT view_edge optional match (m:Place)<-[ANONR0*0]->()-[view_edge]->()<-[ANONR1*1..1]-(n:Comment) WHERE ALL(rel IN ANONR0 WHERE rel.is_view is null)  AND view_edge.is_view is null  AND ALL(rel IN ANONR1 WHERE rel.is_view is null)  with n,m,view_edge CREATE (n)-[r:COMMENT_PLACE{is_view:true}]->(m) with DISTINCT view_edge optional match (m:Place)<-[ANONR2*1]->()-[view_edge]->()<-[ANONR3*0..0]-(n:Comment) WHERE ALL(rel IN ANONR2 WHERE rel.is_view is null)  AND view_edge.is_view is null  AND ALL(rel IN ANONR3 WHERE rel.is_view is null)  with n,m,view_edge CREATE (n)-[r:COMMENT_PLACE{is_view:true}]->(m) with DISTINCT view_edge optional match (n:Comment)-[ANONR0:replyOf*0..]->()-[view_edge:replyOf]->()-[ANONR1:replyOf*0..]->(m:Post) with n,m,view_edge CREATE (n)-[r:ROOT_POST{is_view:true}]->(m)",
    "MATCH (n:Person {id:\"65\"})-[r:likes]->(m:Comment {id:\"1649268071638\"}) delete r": "MATCH (n:Person {id:\"65\"})-[r:likes]->(m:Comment {id:\"1649268071638\"}) WITH [r] as delete_views  UNWIND delete_views as view_edge optional match (n:Person)-[view_edge]->()-[r2]->(m:Place) WHERE view_edge.is_view is null  AND r2.is_view is null  with n,m,collect(view_edge) as view_edges with n,m,size(view_edges) as num,view_edges optional match (n)-[r:PERSON_PLACE{is_view:true}]->(m) with collect(r) as views, n,m,num,view_edges UNWIND range(0,num-1) as i delete views[i] with view_edges UNWIND view_edges as view_edge with DISTINCT view_edge optional match (n:Person)-[r1]->()-[view_edge]->(m:Place) WHERE r1.is_view is null  AND view_edge.is_view is null  with n,m,collect(view_edge) as view_edges with n,m,size(view_edges) as num,view_edges optional match (n)-[r:PERSON_PLACE{is_view:true}]->(m) with collect(r) as views, n,m,num,view_edges UNWIND range(0,num-1) as i delete views[i] with view_edges UNWIND view_edges as view_edge with DISTINCT view_edge optional match (m:Place)<-[ANONR0*0]->()-[view_edge]->()<-[ANONR1*1..1]-(n:Comment) WHERE ALL(rel IN ANONR0 WHERE rel.is_view is null)  AND view_edge.is_view is null  AND ALL(rel IN ANONR1 WHERE rel.is_view is null)  with n,m,collect(view_edge) as view_edges with n,m,size(view_edges) as num,view_edges optional match (n)-[r:COMMENT_PLACE{is_view:true}]->(m) with collect(r) as views, n,m,num,view_edges UNWIND range(0,num-1) as i delete views[i] with view_edges UNWIND view_edges as view_edge with DISTINCT view_edge optional match (m:Place)<-[ANONR2*1]->()-[view_edge]->()<-[ANONR3*0..0]-(n:Comment) WHERE ALL(rel IN ANONR2 WHERE rel.is_view is null)  AND view_edge.is_view is null  AND ALL(rel IN ANONR3 WHERE rel.is_view is null)  with n,m,collect(view_edge) as view_edges with n,m,size(view_edges) as num,view_edges optional match (n)-[r:COMMENT_PLACE{is_view:true}]->(m) with collect(r) as views, n,m,num,view_edges UNWIND range(0,num-1) as i delete views[i] with view_edges UNWIND view_edges as view_edge with DISTINCT view_edge optional match (n:Comment)-[ANONR0:replyOf*0..]->()-[view_edge:replyOf]->()-[ANONR1:replyOf*0..]->(m:Post) with n,m,collect(view_edge) as view_edges with n,m,size(view_edges) as num,view_edges optional match (n)-[r:ROOT_POST{is_view:true}]->(m) with collect(r) as views, n,m,num,view_edges UNWIND range(0,num-1) as i delete views[i] with DISTINCT view_edge MATCH (n:Person {id:\"65\"})-[r:likes]->(m:Comment {id:\"1649268071638\"}) delete r",
    "MATCH (n:Post {id:\"556\"}) detach delete n": "MATCH (n:Post {id:\"556\"}) WITH [n] as delete_views  UNWIND delete_views as view_vetex optional match (n:Person)-[*0]-(view_vetex)-[r1]->()-[r2]->(m:Place) WHERE r1.is_view is null  AND r2.is_view is null  with n,m,collect(view_vetex) as view_vetexs with n,m,size(view_vetexs) as num,view_vetexs optional match (n)-[r:PERSON_PLACE{is_view:true}]->(m) with collect(r) as views, n,m,num,view_vetexs UNWIND range(0,num-1) as i delete views[i] with view_vetexs UNWIND view_vetexs as view_vetex with DISTINCT view_vetex optional match (n:Person)-[r1]->()-[*0]-(view_vetex)-[r2]->(m:Place) WHERE r1.is_view is null  AND r2.is_view is null  with n,m,collect(view_vetex) as view_vetexs with n,m,size(view_vetexs) as num,view_vetexs optional match (n)-[r:PERSON_PLACE{is_view:true}]->(m) with collect(r) as views, n,m,num,view_vetexs UNWIND range(0,num-1) as i delete views[i] with view_vetexs UNWIND view_vetexs as view_vetex with DISTINCT view_vetex optional match (n:Person)-[r1]->()-[r2]->(m:Place)-[*0]-(view_vetex) WHERE r1.is_view is null  AND r2.is_view is null  with n,m,collect(view_vetex) as view_vetexs with n,m,size(view_vetexs) as num,view_vetexs optional match (n)-[r:PERSON_PLACE{is_view:true}]->(m) with collect(r) as views, n,m,num,view_vetexs UNWIND range(0,num-1) as i delete views[i] with view_vetexs UNWIND view_vetexs as view_vetex with DISTINCT view_vetex optional match (m:Place)-[*0]-(view_vetex)<-[r1*2..2]-(n:Comment) WHERE ALL(rel IN r1 WHERE rel.is_view is null)  with n,m,collect(view_vetex) as view_vetexs with n,m,size(view_vetexs) as num,view_vetexs optional match (n)-[r:COMMENT_PLACE{is_view:true}]->(m) with collect(r) as views, n,m,num,view_vetexs UNWIND range(0,num-1) as i delete views[i] with view_vetexs UNWIND view_vetexs as view_vetex with DISTINCT view_vetex optional match (m:Place)<-[r1*2..2]-(n:Comment)-[*0]-(view_vetex) WHERE ALL(rel IN r1 WHERE rel.is_view is null)  with n,m,collect(view_vetex) as view_vetexs with n,m,size(view_vetexs) as num,view_vetexs optional match (n)-[r:COMMENT_PLACE{is_view:true}]->(m) with collect(r) as views, n,m,num,view_vetexs UNWIND range(0,num-1) as i delete views[i] with view_vetexs UNWIND view_vetexs as view_vetex with DISTINCT view_vetex optional match (m:Place)<-[ANONR0*1]->(view_vetex)-[ANONR1*1..1]-(n:Comment) WHERE ALL(rel IN ANONR0 WHERE rel.is_view is null)  AND ALL(rel IN ANONR1 WHERE rel.is_view is null)  with n,m,collect(view_vetex) as view_vetexs with n,m,size(view_vetexs) as num,view_vetexs optional match (n)-[r:COMMENT_PLACE{is_view:true}]->(m) with collect(r) as views, n,m,num,view_vetexs UNWIND range(0,num-1) as i delete views[i] with view_vetexs UNWIND view_vetexs as view_vetex with DISTINCT view_vetex optional match (m:Place)<-[ANONR2*2]->(view_vetex)-[ANONR3*0]-(n:Comment) WHERE ALL(rel IN ANONR2 WHERE rel.is_view is null)  AND ALL(rel IN ANONR3 WHERE rel.is_view is null)  with n,m,collect(view_vetex) as view_vetexs with n,m,size(view_vetexs) as num,view_vetexs optional match (n)-[r:COMMENT_PLACE{is_view:true}]->(m) with collect(r) as views, n,m,num,view_vetexs UNWIND range(0,num-1) as i delete views[i] with view_vetexs UNWIND view_vetexs as view_vetex with DISTINCT view_vetex optional match (n:Comment)-[*0]-(view_vetex)-[r1:replyOf*..]->(m:Post) with n,m,collect(view_vetex) as view_vetexs with n,m,size(view_vetexs) as num,view_vetexs optional match (n)-[r:ROOT_POST{is_view:true}]->(m) with collect(r) as views, n,m,num,view_vetexs UNWIND range(0,num-1) as i delete views[i] with view_vetexs UNWIND view_vetexs as view_vetex with DISTINCT view_vetex optional match (n:Comment)-[r1:replyOf*..]->(m:Post)-[*0]-(view_vetex) with n,m,collect(view_vetex) as view_vetexs with n,m,size(view_vetexs) as num,view_vetexs optional match (n)-[r:ROOT_POST{is_view:true}]->(m) with collect(r) as views, n,m,num,view_vetexs UNWIND range(0,num-1) as i delete views[i] with view_vetexs UNWIND view_vetexs as view_vetex with DISTINCT view_vetex optional match (n:Comment)-[ANONR0:replyOf*1..]->(view_vetex)-[ANONR1:replyOf*0..]->(m:Post) with n,m,collect(view_vetex) as view_vetexs with n,m,size(view_vetexs) as num,view_vetexs optional match (n)-[r:ROOT_POST{is_view:true}]->(m) with collect(r) as views, n,m,num,view_vetexs UNWIND range(0,num-1) as i delete views[i] with DISTINCT view_vetex MATCH (n:Post {id:\"556\"}) detach delete n"
}